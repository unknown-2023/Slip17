Write node js application that transfer a file as an attachment on web and enables browser 
to prompt the  user to download file using express js.

1. Create a new Node.js project and install the necessary dependencies:
 mkdir file-download-app
 cd file-download-app
 npm init -y
 npm install express

2. Create a folder named `public` in your project --> store one sample file --> sample.txt

3. Create an Express.js application (`app.js`): --> in your own folder not in public folder
 const express = require('express');
const path = require('path');
 const app = express();
const port = process.env.PORT || 3000;
 // Serve static files from the 'public' folder
 app.use(express.static('public'));
 app.get('/', (req, res) => {
 const filePath = path.join(__dirname, 'index.html');
// Send the HTML file as the response
 res.sendFile(filePath);
 });

// Define a route to download the file
 app.get('/download', (req, res) => {
 const filePath = path.join(__dirname, 'public', 'sample.txt');
 // Set the Content-Disposition header to make the browser prompt for download
 res.setHeader('Content-Disposition', 'attachment; filename=sample.txt'); // Send the file as the response
 res.sendFile(filePath);
 });

 // Start the server
 app.listen(port, () => {
 console.log(`Server is running on port ${port}`);
 });

4. Create an HTML file (`index.html`) that contains a link to download the file: --> in your own folder
<!DOCTYPE html>
 <html>
<head>
 <title>File Download Example</title>
 </head>
<body>
 <h1>File Download Example</h1>
<a href="/download">Download Sample File</a>
 </body>
</html>

5. Start the Express.js applicationn
 npm init -y
 npm install express
 node app.js

Now, when you visit `http://localhost:port number`, you'll see a link to download the sample
file. Clicking on the link will prompt the browser to download the file as an
attachment


